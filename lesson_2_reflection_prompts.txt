What happens when you initialize a repository? Why do you need to do it?

   -> git init : It sets up a repository structure so you can begin tracking changes. Note: still have to make first commit afterwards.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

   
   It allows you to make changes and check differences before they get committed to repository

How can you use the staging area to make sure you have one commit per logical
change?

   By using -> git diff   This will check differences between working directory and staging area and then you can check that you dont have too many changes

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

   It is great for introducing changes that may have to be rolled back or its not known if they will work or stay in the mainline code base. Also good for developing offshoots of a main progam.

How do the diagrams help you visualize the branch structure?

   You really need them to give complete history of all branches, branch names, and the purpose of the different branches so it all makes sense

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	It is the combination of the two branches. If the code doesnt conflict then it completes the merge. If similar lines are changed then the conflict has to be resolved before the merge can be accomplished. This is a good check of potnetial errors.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?


